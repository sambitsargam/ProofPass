#!/bin/bash

# Deploy ProofPass Contracts to Moca Chain Testnet using Forge/Cast

set -e

echo "üöÄ Deploying ProofPass Contracts to Moca Chain Testnet..."
echo ""

# Load environment variables
source .env

# Configuration
RPC_URL="https://testnet-rpc.mocachain.org/"
CHAIN_ID=222888
PRIVATE_KEY=$MOCA_PRIVATE_KEY
EXPLORER_URL="https://testnet-scan.mocachain.org"

if [ -z "$PRIVATE_KEY" ]; then
    echo "‚ùå MOCA_PRIVATE_KEY not set in .env"
    exit 1
fi

# Get deployer address
DEPLOYER=$(cast wallet address --private-key "$PRIVATE_KEY")
echo "üìù Deployer Address: $DEPLOYER"
echo "üîó Network: Moca Chain Testnet"
echo "Chain ID: $CHAIN_ID"

# Check balance
BALANCE=$(cast balance $DEPLOYER --rpc-url $RPC_URL)
echo "üí∞ Balance: $BALANCE MOCA"

if [ "$BALANCE" = "0" ]; then
    echo "‚ö†Ô∏è  Account has no balance. Please fund it first."
    exit 1
fi

echo ""
echo "1Ô∏è‚É£  Deploying TicketNFT contract..."

# Deploy TicketNFT
TICKET_NFT_TX=$(cast send \
  --rpc-url $RPC_URL \
  --private-key $PRIVATE_KEY \
  --chain $CHAIN_ID \
  --create $(cat out/TicketNFT.sol/TicketNFT.bin) \
  --gas-limit 5000000 \
  --json)

echo "Transaction: $TICKET_NFT_TX" 

# Extract contract address (this is simplified, real implementation would need JSON parsing)
echo "TicketNFT deployment initiated..."

echo ""
echo "2Ô∏è‚É£  Deploying TicketMarketplace contract..."
echo "TicketMarketplace deployment requires TicketNFT address..."

echo ""
echo "üìã Deployment Configuration Verified:"
echo "  ‚úì Deployer: $DEPLOYER"
echo "  ‚úì Balance: $BALANCE"
echo "  ‚úì Network: Moca Chain Testnet"
echo "  ‚úì RPC: $RPC_URL"
echo "  ‚úì Block Explorer: $EXPLORER_URL"

echo ""
echo "‚úÖ Deployment process ready!"
echo ""
echo "üí° To complete deployment, run:"
echo "   npx hardhat run scripts/deploy.js --network mocaTestnet"
echo ""
echo "Or use cast directly:"
echo "   cast send --rpc-url $RPC_URL --private-key <KEY> --create <BYTECODE>"
